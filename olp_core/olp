#!/usr/bin/python
import OLPManager
from OLPModules import *
from OLPExceptions import *
def OLPMain():
    try :
        command = OLPManager.get_command()
        command_params_regex = re.compile("^(-(\w+))+(.*)$")
        match = re.match(command_params_regex, command)
        if match:
            param = match.group(1).lower()
            if param == '-df':
                #Forced define
                OLPManager.define(match.group(3).strip(), force = True)
            elif param == "-d":
                #Define
                OLPManager.define(match.group(3).strip())
            elif param == "-i":
                #Import module
                OLPManager.add_module(match.group(3).strip())
            elif param == "-e":
                #Manually edit definitions
                OLPManager.edit(match.group(3).strip())
            elif param == "-h":
                #Print help msg
                OLPManager.print_help_msg()
            elif param == "-modules":
                OLPManager.print_modules()
            elif param == "-p":
                OLPManager.run_command_on_stdin(match.group(3).strip())
            else:
                raise OLPUnrecognisedParameter
        else:
            # OLP was passed no new definition or import, so we assume it's a regular command.
            result = OLPManager.run_command(OLPManager.get_command())
            if result:
                print(result)
    except OLPNameTaken as e:
        print(e.__str__())
    except OLPNeedOverrideToDefine as e:
        print(e.__str__())
    except OLPNoCommand as e:
        print(e.__str__())
    except OLPInaccessibleModule as e:
        print(e.__str__())
    except OLPUnrecognisedParameter as e:
        print(e.__str__())
    except OLPInvalidDefintion as e:
        print(e.__str__())
    except OLPInvalidModuleName as e:
        print(e.__str__())

if __name__ == "__main__":
    OLPMain()
